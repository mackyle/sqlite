# 2022 September 27
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
#

source [file join [file dirname [info script]] rbu_common.tcl]
set ::testprefix rbuempty

db close
sqlite3_shutdown
sqlite3_config_uri 1

forcedelete rbu.db
sqlite3 db test.db
do_execsql_test 1.0 {
  CREATE TABLE t1(a INTEGER PRIMARY KEY, b TEXT);
  INSERT INTO t1 VALUES(1, 'one');
  INSERT INTO t1 VALUES(2, 'two');
  INSERT INTO t1 VALUES(3, 'three');

  ATTACH 'rbu.db' AS aux;
  CREATE TABLE aux.data_t1(a, b, rbu_control);
  DETACH aux;
}

do_test 1.1 {
  sqlite3rbu rbu test.db rbu.db
  lappend ::v [rbu state]
  lappend ::v [rbu bp_progress]
  while {[rbu step]=="SQLITE_OK"} {
    lappend ::v [rbu state]
    lappend ::v [rbu bp_progress]
  }
  lappend ::v [rbu state]
  lappend ::v [rbu bp_progress]
  rbu close
} {SQLITE_DONE}

do_execsql_test 1.2 {
  SELECT * FROM t1
} {1 one 2 two 3 three}

forcedelete rbu.db
do_execsql_test 1.3 {
  ATTACH 'rbu.db' AS aux;
  CREATE TABLE aux.data_t1(a, b, rbu_control);
  INSERT INTO aux.data_t1 VALUES(4, 'FOUR', 0);
  DETACH aux;
}

do_test 1.4 {
  while {1} {
    sqlite3rbu rbu test.db rbu.db
    lappend ::v [rbu state]
    lappend ::v [rbu bp_progress]
    set rc [rbu step]
    lappend ::v [rbu state]
    lappend ::v [rbu bp_progress]
    rbu close
    if {$rc!="SQLITE_OK"} break
    db eval { SELECT * FROM t1 } 
    db eval { PRAGMA wal_checkpoint = restart }
  }
} {}



finish_test


